{"ast":null,"code":"var _jsxFileName = \"/Users/alecbarker/Development/Code/phase-2/record-store/frontend/src/routes/Shop.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport Form from \"../Form\";\nimport Album from \"../Album\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Shop() {\n  _s();\n  const [albums, setAlbums] = useState(useLoaderData());\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/albums\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        id: albums.length + 1,\n        name: event.target.name.value,\n        price: parseInt(event.target.price.value)\n      })\n    }).then(response => response.json()).then(newAlbum => setAlbums([...albums, newAlbum]));\n  }\n  function MapAlbums({\n    albums\n  }) {\n    const mappedAlbums = albums.map(album => /*#__PURE__*/_jsxDEV(Album, {\n      album: album\n    }, album.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"albumList\",\n    children: mappedAlbums\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n  //   {/* {albums.map((album) => (\n  //     <div key={album.id}>\n  //       <p>{album.name}</p>\n  //       <p>{album.title}</p>\n  //       <p>{album.artist}</p>\n  //       <p>{album.release_year}</p>\n  //       <p>{album.image}</p>\n  //       <p>{album.genre}</p>\n  //       <sub>${album.price}.00</sub>\n  //     </div>\n  //   ))} */}\n  //   <Form handleSubmit={handleSubmit} />\n  // </div>\n  ;\n}\n_s(Shop, \"Nb0hZzVXC2bz7/yHGalZL92aUH8=\", false, function () {\n  return [useLoaderData];\n});\n_c = Shop;\nvar _c;\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"names":["useState","useLoaderData","Form","Album","jsxDEV","_jsxDEV","Shop","_s","albums","setAlbums","handleSubmit","event","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","id","length","name","target","value","price","parseInt","then","response","json","newAlbum","MapAlbums","mappedAlbums","map","album","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/alecbarker/Development/Code/phase-2/record-store/frontend/src/routes/Shop.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport Form from \"../Form\";\nimport Album from \"../Album\";\n\nexport default function Shop() {\n  const [albums, setAlbums] = useState(useLoaderData());\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/albums\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        id: albums.length + 1,\n        name: event.target.name.value,\n        price: parseInt(event.target.price.value),\n      }),\n    })\n      .then((response) => response.json())\n      .then((newAlbum) => setAlbums([...albums, newAlbum]));\n  }\n  function MapAlbums({ albums }) {\n    const mappedAlbums = albums.map((album) => (\n      <Album key={album.id} album={album} />\n    ));\n  }\n  return (\n    <div className=\"albumList\">{mappedAlbums}</div>\n    //   {/* {albums.map((album) => (\n    //     <div key={album.id}>\n    //       <p>{album.name}</p>\n    //       <p>{album.title}</p>\n    //       <p>{album.artist}</p>\n    //       <p>{album.release_year}</p>\n    //       <p>{album.image}</p>\n    //       <p>{album.genre}</p>\n    //       <sub>${album.price}.00</sub>\n    //     </div>\n    //   ))} */}\n    //   <Form handleSubmit={handleSubmit} />\n    // </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC;EAErD,SAASS,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACV,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,EAAE,EAAEZ,MAAM,CAACa,MAAM,GAAG,CAAC;QACrBC,IAAI,EAAEX,KAAK,CAACY,MAAM,CAACD,IAAI,CAACE,KAAK;QAC7BC,KAAK,EAAEC,QAAQ,CAACf,KAAK,CAACY,MAAM,CAACE,KAAK,CAACD,KAAK;MAC1C,CAAC;IACH,CAAC,CAAC,CACCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,QAAQ,IAAKrB,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEsB,QAAQ,CAAC,CAAC,CAAC;EACzD;EACA,SAASC,SAASA,CAAC;IAAEvB;EAAO,CAAC,EAAE;IAC7B,MAAMwB,YAAY,GAAGxB,MAAM,CAACyB,GAAG,CAAEC,KAAK,iBACpC7B,OAAA,CAACF,KAAK;MAAgB+B,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACd,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CACtC,CAAC;EACJ;EACA,oBACEjC,OAAA;IAAKkC,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAER;EAAY;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;EAC9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAAC/B,EAAA,CAzCuBD,IAAI;EAAA,QACWL,aAAa;AAAA;AAAAwC,EAAA,GAD5BnC,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}